{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red0\green116\blue0;\red92\green38\blue153;
\red46\green13\blue110;\red196\green26\blue22;\red28\green0\blue207;\red63\green110\blue116;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19120\viewh12720\viewkind0
\deftab560
\pard\tx560\pardeftab560\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 - (\cf2 void\cf0 )prepareJSONDataForUsage \{\
    \
    \cf3 //\cf0 \
    \cf3 // Pobranie \uc0\u347 cie\u380 ki do pliku\cf0 \
    \cf3 //\cf0 \
    \cf4 NSString\cf0  *jsonFilepath  = [[\cf4 NSBundle\cf0  \cf5 mainBundle\cf0 ] \cf5 pathForResource\cf0 :\cf6 @"cities"\cf0  \cf5 ofType\cf0 :\cf6 @"json"\cf0 ];\
    \
    \cf3 //\cf0 \
    \cf3 // Wczytanie danych z pliku\cf0 \
    \cf3 //\cf0 \
    \cf4 NSData\cf0  *json = [\cf4 NSData\cf0  \cf5 dataWithContentsOfFile\cf0 :jsonFilepath];\
    \
    \cf3 //\cf0 \
    \cf3 // Parsowanie pliku\cf0 \
    \cf3 //\cf0 \
    \
    \cf4 NSArray\cf0  *jsonArray = [\cf4 NSJSONSerialization\cf0  \cf5 JSONObjectWithData\cf0 :json \cf5 options\cf0 :\cf7 0\cf0  \cf5 error\cf0 :\cf2 nil\cf0 ];\
    \
    \cf5 NSLog\cf0 (\cf6 @"json array count = %d"\cf0 , jsonArray.\cf5 count\cf0 );\
    \
    \cf3 //\cf0 \
    \cf3 // Sortowanie tablicy przy uwzgl\uc0\u281 dnieniu polskich znak\'f3w!\cf0 \
    \cf3 // J\'f3zef Pi\uc0\u322 sudski g\'f3r\u261 !\cf0 \
    \cf3 //\cf0 \
    \cf2 self\cf0 .\cf8 cities\cf0  = [jsonArray \cf5 sortedArrayUsingComparator\cf0 :(\cf4 NSComparator\cf0 )^(\cf2 id\cf0  obj1, \cf2 id\cf0  obj2)\{\
        \cf4 NSString\cf0  *a = [obj1 \cf5 valueForKey\cf0 :\cf6 @"city"\cf0 ];\
        \cf4 NSString\cf0  *b = [obj2 \cf5 valueForKey\cf0 :\cf6 @"city"\cf0 ];\
        \cf2 return\cf0  [a \cf5 localizedCaseInsensitiveCompare\cf0 :b];\
    \}];\
    \
    \cf3 /*\
    NSArray *paths = NSSearchPathForDirectoriesInDomains (NSDocumentDirectory, NSUserDomainMask,YES);\
    NSString *documentsPath = [paths objectAtIndex:0];\
    NSString *filePath = [documentsPath stringByAppendingPathComponent:@"cities.plist"];\
    \
    [self.cities writeToFile:filePath atomically:YES];\
    */\cf0 \
\}\
\
- (\cf2 void\cf0 )createIndexes \{\
    \
    \cf3 //\cf0 \
    \cf3 // Wyzerowanie tablic\cf0 \
    \cf3 //\cf0 \
    \
    [\cf2 self\cf0 .\cf8 indexes\cf0    \cf5 removeAllObjects\cf0 ];\
    [\cf2 self\cf0 .\cf8 dict\cf0       \cf5 removeAllObjects\cf0 ];\
    \
    \cf3 //\cf0 \
    \cf3 // Podzia\uc0\u322  globalnej tablicy na sekcje na podstawie indeks\'f3w\cf0 \
    \cf3 // Indexy to "A", "B", "C", "\uc0\u262 ", "D", itd.\cf0 \
    \cf3 //\cf0 \
    \cf4 NSString\cf0  *lastIndex = \cf2 nil\cf0 ;\
    \
    \cf2 for\cf0  (\cf4 NSDictionary\cf0  *item \cf2 in\cf0  \cf2 self\cf0 .\cf8 cities\cf0 ) \{\
        \
        \cf3 //\cf0 \
        \cf3 // Pobranie pierwszego znaku z nazwy miasta\cf0 \
        \cf3 //\cf0 \
        \cf4 NSString\cf0  *currentLetter = [[item \cf5 valueForKey\cf0 :\cf6 @"city"\cf0 ] \cf5 substringToIndex\cf0 :\cf7 1\cf0 ];\
        \
        \cf3 //\cf0 \
        \cf3 // Por\'f3wnanie z ostatnim wczytanym znakiem\cf0 \
        \cf3 //\cf0 \
        \cf2 if\cf0  ((lastIndex == \cf2 nil\cf0 ) || ( ![lastIndex \cf5 isEqualToString\cf0 :currentLetter] )) \{\
            lastIndex = currentLetter;\
            [\cf2 self\cf0 .\cf8 indexes\cf0  \cf5 addObject\cf0 :currentLetter];\
        \}\
        \
        \cf3 //\cf0 \
        \cf3 // Utworzenie lub dodanie obiektu (danych jednego miasta)\cf0 \
        \cf3 // do s\uc0\u322 ownika pod kluczem o warto\u347 ci indeksu (pierwszej litery miasta)\cf0 \
        \cf3 //\cf0 \
        \cf2 if\cf0  ([\cf2 self\cf0 .\cf8 dict\cf0  \cf5 valueForKey\cf0 :currentLetter] == \cf2 nil\cf0 ) \{\
            [\cf2 self\cf0 .\cf8 dict\cf0  \cf5 setObject\cf0 :[\cf4 NSMutableArray\cf0  \cf5 arrayWithObject\cf0 :item] \cf5 forKey\cf0 :currentLetter];\
        \} \cf2 else\cf0  \{\
            [[\cf2 self\cf0 .\cf8 dict\cf0  \cf5 valueForKey\cf0 :currentLetter] \cf5 addObject\cf0 :item];\
        \}\
    \}\
\}}